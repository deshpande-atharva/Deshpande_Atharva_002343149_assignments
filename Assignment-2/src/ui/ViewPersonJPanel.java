/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Address;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author athar
 */
public class ViewPersonJPanel extends javax.swing.JPanel {
    PersonDirectory personDirectory;
    Person person;
    JPanel WorkArea;
    private Address homeaddress;
    private Address workaddress;
    

    /**
     * Creates new form ViewPerson
     */
    public ViewPersonJPanel(JPanel WorkArea,PersonDirectory personDirectory, Person person,Address homeaddress,Address workaddress) {
        initComponents();
        this.personDirectory=personDirectory;
        this.person=person;
        this.WorkArea=WorkArea;
        this.workaddress= new Address();
        this.homeaddress= new Address();
        //calling the populate table method
        populateTable();
    }
    
    private void populateTable() {
        // Get the DefaultTableModel from the JTable
        DefaultTableModel model = (DefaultTableModel) tblViewPerson.getModel();
        
        // Clear the existing rows in the table
        model.setRowCount(0);
        
        // Iterate through the list of people in the person directory
        for (Person p : personDirectory.getPersonList()) {
            // Create an array of objects for each row
            Object[] row = new Object[6];
            row[0] = p.getFirstname();  // First Name
            row[1] = p.getLastname();   // Last Name
            row[2] = p.getHomeAddress().getCity(); // Home City
            row[3] = p.getHomeAddress().getZipCode(); // Home Zip
            row[4] = p.getWorkAddress().getCity();  // Work City
            row[5] = p.getWorkAddress().getZipCode();  // Work Zip
            
            // Add the row to the table model
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMainTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewPerson = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtSearchBox = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));

        lblMainTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblMainTitle.setText("            View Person");

        tblViewPerson.setBackground(new java.awt.Color(255, 153, 153));
        tblViewPerson.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tblViewPerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "City", "Home Zip", "Work City", "Work Zip"
            }
        ));
        jScrollPane1.setViewportView(tblViewPerson);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnView.setText("View Details");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Person");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnBack.setText("<<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblMainTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnView, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(82, 82, 82)
                        .addComponent(txtSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(149, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnSearch, btnView});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMainTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(txtSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(btnView)
                .addGap(49, 49, 49)
                .addComponent(btnDelete)
                .addGap(0, 163, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        WorkArea.remove(this);
        CardLayout layout=(CardLayout)WorkArea.getLayout();
        layout.previous(WorkArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String searchData = txtSearchBox.getText().trim();
        Person foundperson = personDirectory.findPerson(searchData);
        if(person!=null){
            UpdatePersonJPanel create= new UpdatePersonJPanel(this,WorkArea,personDirectory,foundperson,homeaddress,workaddress,tblViewPerson);
            WorkArea.add("UpdatePersonJPanel",create);
            CardLayout layout=(CardLayout)WorkArea.getLayout();
            layout.next(WorkArea);
        }
        
        
        
        
        
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
    // TODO add your handling code here:
        //first check if row is selected.
        // Get the DefaultTableModel from the JTable
    DefaultTableModel model = (DefaultTableModel) tblViewPerson.getModel();

    // Check if a row is selected
    int selectedRow = tblViewPerson.getSelectedRow();
    if (selectedRow < 0) {
        JOptionPane.showMessageDialog(null, "Please select a row to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        return; // Exit if no row is selected
    }

    
    String selectedPersonName = (String) model.getValueAt(selectedRow, 0);  
    // Find the corresponding Person object in the PersonDirectory using the selected nam
    Person selectedPerson = null;
    for (Person person : personDirectory.getPersonList()) {  
        if (person.getFirstname().equals(selectedPersonName)) { 
            selectedPerson = person;
            break;
        }
    }

    if (selectedPerson == null) {
        JOptionPane.showMessageDialog(null, "Person not found", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    UpdatePersonJPanel create= new UpdatePersonJPanel(this,WorkArea,personDirectory,selectedPerson,homeaddress,workaddress,tblViewPerson);
    WorkArea.add("UpdatePersonJPanel",create);
    CardLayout layout=(CardLayout)WorkArea.getLayout();
    layout.next(WorkArea);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblViewPerson.getSelectedRow();
        if (selectedRow >= 0) {
            // Get the Person object to be deleted (assuming first column is First Name)
        String firstName = (String) tblViewPerson.getValueAt(selectedRow, 0);
        Person personToDelete = personDirectory.findPerson(firstName);
        if (personToDelete != null) {
            // Remove the person from the directory
            personDirectory.removePerson(personToDelete);
            JOptionPane.showMessageDialog(this, "Person deleted successfully!");
            populateTable();
        }   
        }  
        else {
        // Show message if no row is selected
        JOptionPane.showMessageDialog(this, "Please select a person to delete.");
    }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMainTitle;
    private javax.swing.JTable tblViewPerson;
    private javax.swing.JTextField txtSearchBox;
    // End of variables declaration//GEN-END:variables

}
